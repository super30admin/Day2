class MyHashMap(object):

    def __init__(self):
        self.my_list = [None]*1001

    def __hashfunc1(self, key):
        return key//1000  

    def __hashfunc2(self, key):
        return key%1000

    def put(self, key, value):
        """
        :type key: int
        :type value: int
        :rtype: None
        """
        first = self.__hashfunc1(key)
        second = self.__hashfunc2(key)
        if self.my_list[first] == None:
            self.my_list[first] = [None]*1000
        self.my_list[first][second] = [key,value]

    def get(self, key):
        """
        :type key: int
        :rtype: int
        """
        first = self.__hashfunc1(key)
        second = self.__hashfunc2(key)
        if self.my_list[first] and self.my_list[first][second]:
            return self.my_list[first][second][1]
        else:
            return -1
        
    def remove(self, key):
        """
        :type key: int
        :rtype: None
        """
        first = self.__hashfunc1(key)
        second = self.__hashfunc2(key)
        if self.my_list[first]:
            self.my_list[first][second] = None



# Your MyHashMap object will be instantiated and called as such:
# obj = MyHashMap()
# obj.put(key,value)
# param_2 = obj.get(key)
# obj.remove(key)