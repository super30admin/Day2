class MyHashMap {

    class Node{
        int key; 
        int val;
        Node next;
            public Node(int key, int value){
                this.key = key;
                this.val = value;
            }
    }
    // creating storage array of Node datatype as we are going to have a LL to the storage
    private Node [] storage;
    public MyHashMap() {
        //initilize storage
        this.storage = new Node[10000];
    }
    private int hashIdx(int key){
        //mod it by 10000 to get the hashidx
        return key%10000;
    }

    private Node find(Node head,int key){
        Node prev = null;
        Node curr = head;
        while(curr != null && curr.key != key){
            prev = curr;
            curr = curr.next;
        }
        return prev;
    }
    
    public void put(int key, int value) {
        int hash = hashIdx(key);
    
        if(storage[hash] == null){
            storage[hash] = new Node(-1, -1);//this is a dummy node
        }
        //call the find function
        Node prev = find(storage[hash], key);
        //if prev.next is null that is there is no node we are seaching for so create new node 
        if(prev.next == null){
            prev.next = new Node(key, value);
        }
        //if we already have the node we will change the value
        else{
            prev.next.val = value;
            //replacing old value with the new value
        }
        
    }
    
    public int get(int key) {
        int hash = hashIdx(key);
        if(storage[hash] == null){
            //there is no LL 
            return -1;
        }
        //check if there is any node or not
        Node prev = find(storage[hash], key);
        if(prev.next == null){
            //there is no LL in the array
            return -1;
        }
        else{
            //if there is a node we will return the value
            return prev.next.val; 
        }
            
        }
    
    
    public void remove(int key) {
        int hash = hashIdx(key);
        if(storage[hash] == null)return;
        Node prev = find(storage[hash], key);

        if(prev.next == null)return;
        else{
            //prev.next = current
            prev.next = prev.next.next;
        }
        
    }
}


/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap obj = new MyHashMap();
 * obj.put(key,value);
 * int param_2 = obj.get(key);
 * obj.remove(key);
 */